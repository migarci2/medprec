services:
  # Landing Page
  landing:
    build:
      context: ./landing
      dockerfile: Dockerfile
    container_name: medprec-landing
    restart: unless-stopped
    networks:
      - medprec-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Demo App
  demo:
    build:
      context: ./demo
      dockerfile: Dockerfile
    container_name: medprec-demo
    restart: unless-stopped
    networks:
      - medprec-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: medprec-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/letsencrypt/live:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - landing
      - demo
    networks:
      - medprec-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot para SSL (Let's Encrypt)
  certbot:
    image: certbot/certbot
    container_name: medprec-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - medprec-network

networks:
  medprec-network:
    driver: bridge

volumes:
  nginx-logs:
    driver: local
